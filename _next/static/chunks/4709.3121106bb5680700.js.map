{"version":3,"file":"static/chunks/4709.3121106bb5680700.js","mappings":"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","sources":["webpack://_N_E/../node_modules/lodash/_baseSet.js","webpack://_N_E/../node_modules/lodash/clone.js","webpack://_N_E/../node_modules/lodash/isEqual.js","webpack://_N_E/../node_modules/lodash/setWith.js","webpack://_N_E/../node_modules/uniforms/esm/changedKeys.js","webpack://_N_E/../node_modules/uniforms/esm/randomIds.js","webpack://_N_E/../node_modules/uniforms/esm/BaseForm.js","webpack://_N_E/../node_modules/uniforms/esm/QuickForm.js","webpack://_N_E/../node_modules/uniforms/esm/ValidatedForm.js","webpack://_N_E/../node_modules/uniforms/esm/AutoForm.js","webpack://_N_E/../node_modules/uniforms/esm/ValidatedQuickForm.js"],"sourcesContent":["var assignValue = require('./_assignValue'),\n    castPath = require('./_castPath'),\n    isIndex = require('./_isIndex'),\n    isObject = require('./isObject'),\n    toKey = require('./_toKey');\n\n/**\n * The base implementation of `_.set`.\n *\n * @private\n * @param {Object} object The object to modify.\n * @param {Array|string} path The path of the property to set.\n * @param {*} value The value to set.\n * @param {Function} [customizer] The function to customize path creation.\n * @returns {Object} Returns `object`.\n */\nfunction baseSet(object, path, value, customizer) {\n  if (!isObject(object)) {\n    return object;\n  }\n  path = castPath(path, object);\n\n  var index = -1,\n      length = path.length,\n      lastIndex = length - 1,\n      nested = object;\n\n  while (nested != null && ++index < length) {\n    var key = toKey(path[index]),\n        newValue = value;\n\n    if (key === '__proto__' || key === 'constructor' || key === 'prototype') {\n      return object;\n    }\n\n    if (index != lastIndex) {\n      var objValue = nested[key];\n      newValue = customizer ? customizer(objValue, key, nested) : undefined;\n      if (newValue === undefined) {\n        newValue = isObject(objValue)\n          ? objValue\n          : (isIndex(path[index + 1]) ? [] : {});\n      }\n    }\n    assignValue(nested, key, newValue);\n    nested = nested[key];\n  }\n  return object;\n}\n\nmodule.exports = baseSet;\n","var baseClone = require('./_baseClone');\n\n/** Used to compose bitmasks for cloning. */\nvar CLONE_SYMBOLS_FLAG = 4;\n\n/**\n * Creates a shallow clone of `value`.\n *\n * **Note:** This method is loosely based on the\n * [structured clone algorithm](https://mdn.io/Structured_clone_algorithm)\n * and supports cloning arrays, array buffers, booleans, date objects, maps,\n * numbers, `Object` objects, regexes, sets, strings, symbols, and typed\n * arrays. The own enumerable properties of `arguments` objects are cloned\n * as plain objects. An empty object is returned for uncloneable values such\n * as error objects, functions, DOM nodes, and WeakMaps.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to clone.\n * @returns {*} Returns the cloned value.\n * @see _.cloneDeep\n * @example\n *\n * var objects = [{ 'a': 1 }, { 'b': 2 }];\n *\n * var shallow = _.clone(objects);\n * console.log(shallow[0] === objects[0]);\n * // => true\n */\nfunction clone(value) {\n  return baseClone(value, CLONE_SYMBOLS_FLAG);\n}\n\nmodule.exports = clone;\n","var baseIsEqual = require('./_baseIsEqual');\n\n/**\n * Performs a deep comparison between two values to determine if they are\n * equivalent.\n *\n * **Note:** This method supports comparing arrays, array buffers, booleans,\n * date objects, error objects, maps, numbers, `Object` objects, regexes,\n * sets, strings, symbols, and typed arrays. `Object` objects are compared\n * by their own, not inherited, enumerable properties. Functions and DOM\n * nodes are compared by strict equality, i.e. `===`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n * @example\n *\n * var object = { 'a': 1 };\n * var other = { 'a': 1 };\n *\n * _.isEqual(object, other);\n * // => true\n *\n * object === other;\n * // => false\n */\nfunction isEqual(value, other) {\n  return baseIsEqual(value, other);\n}\n\nmodule.exports = isEqual;\n","var baseSet = require('./_baseSet');\n\n/**\n * This method is like `_.set` except that it accepts `customizer` which is\n * invoked to produce the objects of `path`.  If `customizer` returns `undefined`\n * path creation is handled by the method instead. The `customizer` is invoked\n * with three arguments: (nsValue, key, nsObject).\n *\n * **Note:** This method mutates `object`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Object\n * @param {Object} object The object to modify.\n * @param {Array|string} path The path of the property to set.\n * @param {*} value The value to set.\n * @param {Function} [customizer] The function to customize assigned values.\n * @returns {Object} Returns `object`.\n * @example\n *\n * var object = {};\n *\n * _.setWith(object, '[0][1]', 'a', Object);\n * // => { '0': { '1': 'a' } }\n */\nfunction setWith(object, path, value, customizer) {\n  customizer = typeof customizer == 'function' ? customizer : undefined;\n  return object == null ? object : baseSet(object, path, value, customizer);\n}\n\nmodule.exports = setWith;\n","import isEqual from 'lodash/isEqual';\nimport { joinName } from './joinName';\nfunction isObject(value) {\n    return !!value && value === Object(value) && !(value instanceof Date);\n}\n// eslint-disable-next-line complexity\nexport function changedKeys(root, valueA, valueB) {\n    if (!isObject(valueA) || (valueB && typeof valueA !== typeof valueB)) {\n        return isEqual(valueA, valueB) ? [] : [root];\n    }\n    const changed = [root];\n    if (isObject(valueB)) {\n        for (const key in valueA) {\n            if (!(key in valueB) || !isEqual(valueA[key], valueB[key])) {\n                changed.push(joinName(root, key));\n            }\n        }\n        for (const key in valueB) {\n            if (!(key in valueA)) {\n                changed.push(joinName(root, key));\n            }\n        }\n        if (changed.length === 1) {\n            changed.pop();\n        }\n    }\n    else {\n        // eslint-disable-next-line guard-for-in\n        for (const key in valueA) {\n            changed.push(joinName(root, key));\n        }\n    }\n    return changed;\n}\n","// Workaround for SSR\n// https://github.com/vazco/uniforms/issues/40\n// https://github.com/facebook/react/issues/4000\nfunction randomIdsGenerator(prefix) {\n    let counter = 0;\n    return () => `${prefix}-${('000' + (counter++).toString(36)).slice(-4)}`;\n}\nconst randomIdPrefix = randomIdsGenerator('uniforms');\nexport function randomIds(prefix = randomIdPrefix()) {\n    return randomIdsGenerator(prefix);\n}\n","import clone from 'lodash/clone';\nimport get from 'lodash/get';\nimport omit from 'lodash/omit';\nimport setWith from 'lodash/setWith';\nimport React, { Component } from 'react';\nimport { changedKeys } from './changedKeys';\nimport { context } from './context';\nimport { randomIds } from './randomIds';\nexport class BaseForm extends Component {\n    constructor(props) {\n        super(props);\n        // @ts-expect-error: State may be bigger, but it'll be covered by the subclasses.\n        this.state = {\n            changed: false,\n            changedMap: Object.create(null),\n            resetCount: 0,\n            submitted: false,\n            submitting: false,\n        };\n        this.mounted = false;\n        this.randomId = randomIds(this.props.id);\n        this.onReset = this.reset = this.onReset.bind(this);\n        this.onChange = this.change = this.onChange.bind(this);\n        this.onSubmit = this.submit = this.onSubmit.bind(this);\n        // TODO: It shouldn't be here\n        const getModel = this.getModel.bind(this);\n        this.getModel = (mode, model = getModel(mode)) => mode !== undefined && this.props.modelTransform\n            ? this.props.modelTransform(mode, model)\n            : model;\n    }\n    componentDidMount() {\n        this.mounted = true;\n    }\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    componentDidUpdate(prevProps, prevState, snapshot) { }\n    componentWillUnmount() {\n        this.mounted = false;\n        if (this.delayId) {\n            clearTimeout(this.delayId);\n        }\n        // There are at least 4 places where we'd need to check, whether or not we\n        // actually perform `setState` after the component gets unmounted. Instead,\n        // we override it to hide the React warning. Also because React no longer\n        // will raise it in the newer versions.\n        // https://github.com/facebook/react/pull/22114\n        // https://github.com/vazco/uniforms/issues/1152\n        this.setState = () => { };\n    }\n    getContext() {\n        return {\n            changed: this.state.changed,\n            changedMap: this.state.changedMap,\n            error: this.getContextError(),\n            formRef: this,\n            model: this.getContextModel(),\n            name: this.getContextName(),\n            onChange: this.getContextOnChange(),\n            onSubmit: this.getContextOnSubmit(),\n            randomId: this.randomId,\n            schema: this.getContextSchema(),\n            state: this.getContextState(),\n            submitted: this.state.submitted,\n            submitting: this.state.submitting,\n            validating: false,\n        };\n    }\n    getContextName() {\n        return [];\n    }\n    getContextError() {\n        return this.props.error;\n    }\n    getContextModel() {\n        return this.getModel('form');\n    }\n    getContextState() {\n        return {\n            disabled: !!this.props.disabled,\n            label: !!this.props.label,\n            placeholder: !!this.props.placeholder,\n            readOnly: !!this.props.readOnly,\n            showInlineError: !!this.props.showInlineError,\n        };\n    }\n    getContextSchema() {\n        return this.props.schema;\n    }\n    getContextOnChange() {\n        // It's bound in constructor.\n        // eslint-disable-next-line @typescript-eslint/unbound-method\n        return this.onChange;\n    }\n    getContextOnSubmit() {\n        // It's bound in constructor.\n        // eslint-disable-next-line @typescript-eslint/unbound-method\n        return this.onSubmit;\n    }\n    getModel(mode, model = this.props.model) {\n        return model;\n    }\n    getNativeFormProps() {\n        const props = omit(this.props, [\n            'autosave',\n            'autosaveDelay',\n            'disabled',\n            'error',\n            'label',\n            'model',\n            'modelTransform',\n            'onChange',\n            'onSubmit',\n            'placeholder',\n            'readOnly',\n            'schema',\n            'showInlineError',\n        ]);\n        return Object.assign(Object.assign({}, props), { \n            // It's bound in constructor.\n            // eslint-disable-next-line @typescript-eslint/unbound-method\n            onSubmit: this.onSubmit, key: `reset-${this.state.resetCount}` });\n    }\n    onChange(key, value) {\n        // Do not set `changed` before componentDidMount\n        if (this.mounted) {\n            const keys = changedKeys(key, value, get(this.getModel(), key));\n            if (keys.length !== 0) {\n                this.setState(state => \n                // If all are already marked, we can skip the update completely.\n                state.changed && keys.every(key => !!get(state.changedMap, key))\n                    ? null\n                    : {\n                        changed: true,\n                        changedMap: keys.reduce((changedMap, key) => setWith(changedMap, key, {}, clone), clone(state.changedMap)),\n                    });\n            }\n        }\n        if (this.props.onChange) {\n            this.props.onChange(key, value);\n        }\n        // Do not call `onSubmit` before componentDidMount\n        if (this.mounted && this.props.autosave) {\n            if (this.delayId) {\n                this.delayId = clearTimeout(this.delayId);\n            }\n            // Delay autosave by `autosaveDelay` milliseconds...\n            this.delayId = setTimeout(() => {\n                // ...and wait for all scheduled `setState`s to commit. This is required\n                // for AutoForm to validate correct model, waiting in `onChange`.\n                this.setState(() => null, () => {\n                    this.onSubmit();\n                });\n            }, this.props.autosaveDelay);\n        }\n    }\n    __reset(state) {\n        return {\n            changed: false,\n            changedMap: Object.create(null),\n            resetCount: state.resetCount + 1,\n            submitted: false,\n            submitting: false,\n        };\n    }\n    onReset() {\n        // @ts-expect-error\n        // It's bound in constructor.\n        // eslint-disable-next-line @typescript-eslint/unbound-method\n        this.setState(this.__reset);\n    }\n    onSubmit(event) {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        this.setState(state => (state.submitted ? null : { submitted: true }));\n        const result = this.props.onSubmit(this.getModel('submit'));\n        if (!(result instanceof Promise)) {\n            return Promise.resolve();\n        }\n        this.setState({ submitting: true });\n        return result.finally(() => {\n            this.setState({ submitting: false });\n        });\n    }\n    render() {\n        return (React.createElement(context.Provider, { value: this.getContext() },\n            React.createElement(\"form\", Object.assign({}, this.getNativeFormProps()))));\n    }\n}\nBaseForm.displayName = 'Form';\nBaseForm.defaultProps = {\n    autosave: false,\n    autosaveDelay: 0,\n    error: null,\n    label: true,\n    model: Object.create(null),\n    noValidate: true,\n    onSubmit() { },\n};\n","import { __rest } from \"tslib\";\nimport React from 'react';\nimport { BaseForm } from './BaseForm';\nexport function Quick(Base) {\n    // @ts-expect-error: Mixin class problem.\n    class QuickForm extends Base {\n        getNativeFormProps() {\n            const _props = super.getNativeFormProps();\n            const { autoField: AutoField = this.getAutoField(), errorsField: ErrorsField = this.getErrorsField(), submitField: SubmitField = this.getSubmitField() } = _props, props = __rest(_props, [\"autoField\", \"errorsField\", \"submitField\"]);\n            if (!props.children) {\n                props.children = this.getContextSchema()\n                    .getSubfields()\n                    .map(key => React.createElement(AutoField, { key: key, name: key }))\n                    .concat([\n                    React.createElement(ErrorsField, { key: \"$ErrorsField\" }),\n                    React.createElement(SubmitField, { key: \"$SubmitField\" }),\n                ]);\n            }\n            return props;\n        }\n        getAutoField() {\n            return () => null;\n        }\n        getErrorsField() {\n            return () => null;\n        }\n        getSubmitField() {\n            return () => null;\n        }\n    }\n    QuickForm.Quick = Quick;\n    QuickForm.displayName = `Quick${Base.displayName}`;\n    return QuickForm;\n}\nexport const QuickForm = Quick(BaseForm);\n","import clone from 'lodash/clone';\nimport cloneDeep from 'lodash/cloneDeep';\nimport isEqual from 'lodash/isEqual';\nimport noop from 'lodash/noop';\nimport omit from 'lodash/omit';\nimport setWith from 'lodash/setWith';\nimport { BaseForm } from './BaseForm';\nexport function Validated(Base) {\n    // @ts-expect-error: Mixin class problem.\n    class ValidatedForm extends Base {\n        constructor(props) {\n            super(props);\n            this.state = Object.assign(Object.assign({}, this.state), { error: null, validate: false, validating: false, validator: this.getContextSchema().getValidator(props.validator) });\n            this.onValidate = this.validate = this.onValidate.bind(this);\n            this.onValidateModel = this.validateModel =\n                this.onValidateModel.bind(this);\n        }\n        getContextError() {\n            var _a;\n            return (_a = super.getContextError()) !== null && _a !== void 0 ? _a : this.state.error;\n        }\n        getContext() {\n            return Object.assign(Object.assign({}, super.getContext()), { validating: this.state.validating });\n        }\n        getNativeFormProps() {\n            const props = super.getNativeFormProps();\n            return omit(props, [\n                'onValidate',\n                'validate',\n                'validator',\n            ]);\n        }\n        componentDidUpdate(prevProps, prevState, snapshot) {\n            super.componentDidUpdate(prevProps, prevState, snapshot);\n            const { model, schema, validate, validator } = this.props;\n            if (schema !== prevProps.schema || validator !== prevProps.validator) {\n                this.setState({ validator: schema.getValidator(validator) }, () => {\n                    if (shouldRevalidate(validate, this.state.validate)) {\n                        this.onValidate();\n                    }\n                });\n            }\n            else if (!isEqual(model, prevProps.model) &&\n                shouldRevalidate(validate, this.state.validate)) {\n                this.onValidateModel(model);\n            }\n        }\n        onChange(key, value) {\n            if (shouldRevalidate(this.props.validate, this.state.validate)) {\n                this.onValidate(key, value);\n            }\n            super.onChange(key, value);\n        }\n        __reset(state) {\n            return Object.assign(Object.assign({}, super.__reset(state)), { error: null, validate: false, validating: false });\n        }\n        onSubmit(event) {\n            if (event) {\n                event.preventDefault();\n                event.stopPropagation();\n            }\n            this.setState({ submitted: true, validate: true });\n            const result = this.onValidate().then(error => {\n                if (error !== null) {\n                    return Promise.reject(error);\n                }\n                // Validation failed (i.e. returned an error), so no error is present\n                // both in the props nor the state.\n                return super.onSubmit().catch(error => {\n                    this.setState({ error });\n                    throw error;\n                });\n            });\n            result.catch(noop);\n            return result;\n        }\n        onValidate(key, value) {\n            let model = this.getContextModel();\n            if (model && key) {\n                model = setWith(clone(model), key, cloneDeep(value), clone);\n            }\n            return this.onValidateModel(model);\n        }\n        onValidateModel(originalModel) {\n            const model = this.getModel('validate', originalModel);\n            // Using `then` allows using the same code for both synchronous and\n            // asynchronous cases. We could use `await` here, but it would make all\n            // calls asynchronous, unnecessary delaying synchronous validation.\n            const then = makeThen(() => {\n                this.setState({ validating: true });\n            });\n            return then(this.state.validator(model), (error = null) => then(this.props.onValidate(model, error), (error = null) => {\n                var _a;\n                // Do not copy the error from props to the state.\n                error = this.props.error === error ? null : error;\n                // If the whole operation was synchronous and resulted in the same\n                // error, we can skip the re-render.\n                this.setState(state => state.error === error && !state.validating\n                    ? null\n                    : { error, validating: false });\n                // A predefined error takes precedence over the validation one.\n                return Promise.resolve((_a = this.props.error) !== null && _a !== void 0 ? _a : error);\n            }));\n        }\n    }\n    ValidatedForm.Validated = Validated;\n    ValidatedForm.displayName = `Validated${Base.displayName}`;\n    ValidatedForm.defaultProps = Object.assign(Object.assign({}, Base.defaultProps), { onValidate(model, error) {\n            return error;\n        }, validate: 'onChangeAfterSubmit' });\n    return ValidatedForm;\n}\nfunction makeThen(callIfAsync) {\n    function then(value, fn) {\n        if (value instanceof Promise) {\n            callIfAsync();\n            return value.then(fn);\n        }\n        return fn(value);\n    }\n    return then;\n}\nfunction shouldRevalidate(inProps, inState) {\n    return (inProps === 'onChange' || (inProps === 'onChangeAfterSubmit' && inState));\n}\nexport const ValidatedForm = Validated(BaseForm);\n","import clone from 'lodash/clone';\nimport isEqual from 'lodash/isEqual';\nimport omit from 'lodash/omit';\nimport setWith from 'lodash/setWith';\nimport { ValidatedQuickForm, } from './ValidatedQuickForm';\nexport function Auto(Base) {\n    // @ts-expect-error: Mixin class problem.\n    class AutoForm extends Base {\n        constructor(props) {\n            super(props);\n            this.state = Object.assign(Object.assign({}, this.state), { model: props.model });\n        }\n        componentDidUpdate(prevProps, prevState, snapshot) {\n            const { model } = this.props;\n            if (!isEqual(model, prevProps.model)) {\n                this.setState({ model });\n            }\n            super.componentDidUpdate(prevProps, prevState, snapshot);\n        }\n        getNativeFormProps() {\n            const props = super.getNativeFormProps();\n            return omit(props, ['onChangeModel']);\n        }\n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\n        getModel(mode) {\n            return this.state.model;\n        }\n        onChange(key, value) {\n            super.onChange(key, value);\n            this.setState(state => ({ model: setWith(clone(state.model), key, value, clone) }), () => {\n                if (this.props.onChangeModel) {\n                    this.props.onChangeModel(this.state.model);\n                }\n            });\n        }\n        __reset(state) {\n            return Object.assign(Object.assign({}, super.__reset(state)), { model: this.props.model });\n        }\n    }\n    AutoForm.Auto = Auto;\n    AutoForm.displayName = `Auto${Base.displayName}`;\n    return AutoForm;\n}\nexport const AutoForm = Auto(ValidatedQuickForm);\n","import { BaseForm } from './BaseForm';\nimport { Quick } from './QuickForm';\nimport { Validated, } from './ValidatedForm';\nexport const ValidatedQuickForm = Validated(Quick(BaseForm));\n"],"names":["assignValue","castPath","isIndex","isObject","toKey","module","exports","object","path","value","customizer","index","length","lastIndex","nested","key","newValue","objValue","undefined","baseClone","baseIsEqual","other","baseSet","Object","Date","randomIdsGenerator","prefix","counter","toString","slice","randomIdPrefix","BaseForm","Component","constructor","props","super","this","state","changed","changedMap","create","resetCount","submitted","submitting","mounted","randomId","randomIds","id","onReset","reset","bind","onChange","change","onSubmit","submit","getModel","mode","model","modelTransform","componentDidMount","componentDidUpdate","prevProps","prevState","snapshot","componentWillUnmount","delayId","clearTimeout","setState","getContext","error","getContextError","formRef","getContextModel","name","getContextName","getContextOnChange","getContextOnSubmit","schema","getContextSchema","getContextState","validating","disabled","label","placeholder","readOnly","showInlineError","getNativeFormProps","assign","keys","root","valueA","valueB","push","joinName","pop","changedKeys","every","reduce","autosave","setTimeout","autosaveDelay","__reset","event","preventDefault","stopPropagation","result","Promise","finally","resolve","render","context","displayName","defaultProps","noValidate","Quick","Base","QuickForm","_props","autoField","AutoField","getAutoField","errorsField","ErrorsField","getErrorsField","submitField","SubmitField","getSubmitField","__rest","children","getSubfields","map","concat","Validated","ValidatedForm","validate","validator","getValidator","onValidate","onValidateModel","validateModel","_a","shouldRevalidate","then","reject","catch","originalModel","callIfAsync","fn","makeThen","inProps","inState","AutoForm","Auto","onChangeModel"],"sourceRoot":""}