{"version":3,"file":"static/chunks/8917-151c99a88c844b35.js","mappings":"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","sources":["webpack://_N_E/../packages/editor/lib-es/core/selector/display/index.js","webpack://_N_E/../packages/editor/lib-es/core/components/hooks/displayMode.js","webpack://_N_E/../packages/editor/lib-es/core/utils/getDropLevels.js","webpack://_N_E/../packages/editor/lib-es/core/components/hooks/node.js","webpack://_N_E/../packages/editor/lib-es/core/components/hooks/nodeActions.js","webpack://_N_E/../packages/editor/lib-es/core/utils/ancestorTree.js"],"sourcesContent":["import { DISPLAY_MODE_EDIT, DISPLAY_MODE_LAYOUT, DISPLAY_MODE_PREVIEW, DISPLAY_MODE_INSERT, DISPLAY_MODE_RESIZING, } from '../../actions/display';\nexport var isPreviewMode = function (_a) {\n    var mode = _a.reactPage.display.mode;\n    return mode === DISPLAY_MODE_PREVIEW;\n};\nexport var isLayoutMode = function (_a) {\n    var mode = _a.reactPage.display.mode;\n    return mode === DISPLAY_MODE_LAYOUT;\n};\nexport var isEditMode = function (_a) {\n    var mode = _a.reactPage.display.mode;\n    return mode === DISPLAY_MODE_EDIT;\n};\nexport var isInsertMode = function (_a) {\n    var mode = _a.reactPage.display.mode;\n    return mode === DISPLAY_MODE_INSERT;\n};\nexport var isResizeMode = function (_a) {\n    var mode = _a.reactPage.display.mode;\n    return mode === DISPLAY_MODE_RESIZING;\n};\n//# sourceMappingURL=index.js.map","import { useCallback } from 'react';\nimport { DISPLAY_MODE_EDIT, DISPLAY_MODE_INSERT, DISPLAY_MODE_LAYOUT, DISPLAY_MODE_PREVIEW, DISPLAY_MODE_RESIZING, setMode, } from '../../actions/display';\nimport { useDispatch, useSelector } from '../../reduxConnect';\nimport { isEditMode, isInsertMode, isLayoutMode, isPreviewMode, isResizeMode, } from '../../selector/display';\n/**\n * @returns true whether the editor is in edit mode\n */\nexport var useIsEditMode = function () {\n    return useSelector(isEditMode);\n};\n/**\n * @returns true whether the editor is in insert mode\n */\nexport var useIsInsertMode = function () {\n    return useSelector(isInsertMode);\n};\n/**\n * @returns true whether the editor is in layout mode\n */\nexport var useIsLayoutMode = function () {\n    return useSelector(isLayoutMode);\n};\n/**\n * @returns true whether the editor is in preview mode mode\n */\nexport var useIsPreviewMode = function () {\n    return useSelector(isPreviewMode);\n};\n/**\n * @returns true whether the editor is in resize mode mode\n */\nexport var useIsResizeMode = function () {\n    return useSelector(isResizeMode);\n};\n/**\n * @returns the current display mode\n */\nexport var useDisplayMode = function () {\n    return useSelector(function (state) { return state.reactPage.display.mode; });\n};\n/**\n * experimental, used internaly for the add new button.\n * @returns a referenced nodeId for the current display mode.\n *\n *\n */\nexport var useDisplayModeReferenceNodeId = function () {\n    return useSelector(function (state) { var _a, _b; return (_b = (_a = state.reactPage) === null || _a === void 0 ? void 0 : _a.display) === null || _b === void 0 ? void 0 : _b.referenceNodeId; });\n};\n/**\n * @returns function to set the display mode\n */\nexport var useSetMode = function () {\n    var dispatch = useDispatch();\n    return useCallback(function (mode, referenceNodeId) {\n        dispatch(setMode(mode, referenceNodeId));\n    }, [dispatch]);\n};\n/**\n * @returns function to change to resize mode\n */\nexport var useSetResizeMode = function () {\n    var setMode = useSetMode();\n    return useCallback(function () { return setMode(DISPLAY_MODE_RESIZING); }, [setMode]);\n};\n/**\n * @returns function to change to edit mode mode\n */\nexport var useSetEditMode = function () {\n    var setMode = useSetMode();\n    return useCallback(function () { return setMode(DISPLAY_MODE_EDIT); }, [setMode]);\n};\n/**\n * @returns function to change to layout mode\n */\nexport var useSetLayoutMode = function () {\n    var setMode = useSetMode();\n    return useCallback(function () { return setMode(DISPLAY_MODE_LAYOUT); }, [setMode]);\n};\n/**\n * @returns function to change to insert mode\n */\nexport var useSetInsertMode = function () {\n    var setMode = useSetMode();\n    return useCallback(function () { return setMode(DISPLAY_MODE_INSERT); }, [setMode]);\n};\n/**\n * @returns function to change to preview mode\n */\nexport var useSetPreviewMode = function () {\n    var setMode = useSetMode();\n    return useCallback(function () { return setMode(DISPLAY_MODE_PREVIEW); }, [setMode]);\n};\n//# sourceMappingURL=displayMode.js.map","var __read = (this && this.__read) || function (o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    }\n    catch (error) { e = { error: error }; }\n    finally {\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        }\n        finally { if (e) throw e.error; }\n    }\n    return ar;\n};\nimport { isRow } from '../types/node';\nvar getMyPositionInParent = function (node, parent) {\n    var _a;\n    var siblings = (_a = (isRow(parent) ? parent.cells : parent.rows)) !== null && _a !== void 0 ? _a : [];\n    var index = siblings.findIndex(function (c) { return c.id === node.id; });\n    return [index, siblings.length];\n};\nvar left = function (node, ancestors) {\n    var _a = __read(ancestors), parent = _a[0], greatParents = _a.slice(1);\n    if (!parent)\n        return 0;\n    if (isRow(node)) {\n        return left(parent, greatParents) + 1;\n    }\n    else {\n        var _b = __read(getMyPositionInParent(node, parent), 1), index = _b[0];\n        if (index === 0) {\n            return left(parent, greatParents) + 1;\n        }\n        else {\n            return 0;\n        }\n    }\n};\nvar right = function (node, ancestors) {\n    var _a = __read(ancestors), parent = _a[0], greatParents = _a.slice(1);\n    if (!parent)\n        return 0;\n    if (isRow(node)) {\n        return right(parent, greatParents) + 1;\n    }\n    else {\n        var _b = __read(getMyPositionInParent(node, parent), 2), index = _b[0], numberOfSiblings = _b[1];\n        if (index === numberOfSiblings - 1) {\n            return right(parent, greatParents) + 1;\n        }\n        else {\n            return 0;\n        }\n    }\n};\nvar above = function (node, ancestors) {\n    var _a = __read(ancestors), parent = _a[0], greatParents = _a.slice(1);\n    if (!parent)\n        return 0;\n    if (!isRow(node)) {\n        return above(parent, greatParents) + 1;\n    }\n    else {\n        var _b = __read(getMyPositionInParent(node, parent), 1), index = _b[0];\n        if (index === 0) {\n            return above(parent, greatParents) + 1;\n        }\n        else {\n            return 0;\n        }\n    }\n};\nvar below = function (node, ancestors) {\n    var _a = __read(ancestors), parent = _a[0], greatParents = _a.slice(1);\n    if (!parent)\n        return 0;\n    if (!isRow(node)) {\n        return below(parent, greatParents) + 1;\n    }\n    else {\n        var _b = __read(getMyPositionInParent(node, parent), 2), index = _b[0], numberOfSiblings = _b[1];\n        if (index === numberOfSiblings - 1) {\n            return below(parent, greatParents) + 1;\n        }\n        else {\n            return 0;\n        }\n    }\n};\nexport var getDropLevels = function (node, ancestors) { return ({\n    left: left(node, ancestors),\n    right: right(node, ancestors),\n    above: above(node, ancestors),\n    below: below(node, ancestors),\n}); };\n//# sourceMappingURL=getDropLevels.js.map","var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __read = (this && this.__read) || function (o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    }\n    catch (error) { e = { error: error }; }\n    finally {\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        }\n        finally { if (e) throw e.error; }\n    }\n    return ar;\n};\nvar __spreadArray = (this && this.__spreadArray) || function (to, from, pack) {\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n        if (ar || !(i in from)) {\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n            ar[i] = from[i];\n        }\n    }\n    return to.concat(ar || Array.prototype.slice.call(from));\n};\nimport debounce from 'lodash.debounce';\nimport { useCallback, useEffect, useMemo, useRef, useState } from 'react';\nimport { useSelector } from '../../reduxConnect';\nimport { findNodeInState } from '../../selector/editable';\nimport { isRow } from '../../types/node';\nimport deepEquals from '../../utils/deepEquals';\nimport { getAvailablePlugins } from '../../utils/getAvailablePlugins';\nimport { getCellData } from '../../utils/getCellData';\nimport { getCellInnerDivStylingProps } from '../../utils/getCellStylingProps';\nimport { getDropLevels } from '../../utils/getDropLevels';\nimport { useUpdateCellData } from './nodeActions';\nimport { useLang } from './options';\nimport { useRenderOption } from './renderOptions';\n/**\n * Use this function to get derived properties of a node. It prevents unnessesary rerenders when only the nessesary properties are returned by the selector\n *\n * you can also select props from the ancestors of the node. Be aware that the last ancestor is the root document id\n *\n * @param nodeId an id of a node (cell or row)\n * @param selector receives the node object or null (if no node with this id exists) and returns T\n * @returns the selection T\n */\nexport var useNodeProps = function (nodeId, selector) {\n    var node = useSelector(function (state) {\n        var result = nodeId ? findNodeInState(state, nodeId) : null;\n        if (!result) {\n            return selector(null, []);\n        }\n        return selector(result.node, result.ancestors);\n    }, deepEquals);\n    return node;\n};\n/**\n *\n * @param nodeId id of a node\n * @param selector receives the ancestors array and returns T\n * @returns T\n */\nexport var useNodeAncestorProps = function (nodeId, selector) {\n    return useNodeProps(nodeId, function (__, ancestors) { return selector(ancestors); });\n};\n/**\n * This is the same as @see useNodeProps, but only for cells. selector will receive null if the given nodeId is not a cell\n * @param nodeId an id of a cell\n * @param selector receives the cell or null (if no cell with this id exists) object and returns T\n * @returns the selection T\n */\nexport var useCellProps = function (nodeId, selector) {\n    return useNodeProps(nodeId, function (node, ancestors) {\n        return node && !isRow(node) ? selector(node, ancestors) : selector(null, ancestors);\n    });\n};\n/**\n * better use useCellProps, unless you really need the full cell object\n * @param nodeId an id of a cell\n * @returns full Cell object\n */\nexport var useCell = function (nodeId) {\n    return useNodeProps(nodeId, function (node, ancestors) {\n        return !isRow(node) ? node : null;\n    });\n};\n/**\n * This is the same as @see useNodeProps, but only for rows.\n * @param nodeId an id of a row\n * @param selector receives the row or null (if no row with this id exists) object and returns T\n * @returns the selection T\n */\nexport var useRowProps = function (nodeId, selector) {\n    return useNodeProps(nodeId, function (node, ancestors) {\n        return isRow(node) ? selector(node, ancestors) : null;\n    });\n};\n/**\n *\n * @param nodeId id of a node\n * @returns the relative hover position over the given node, or null if this node is not hovered over\n */\nexport var useNodeHoverPosition = function (nodeId) {\n    return useSelector(function (state) {\n        var _a, _b;\n        return ((_a = state.reactPage.hover) === null || _a === void 0 ? void 0 : _a.nodeId) === nodeId\n            ? (_b = state.reactPage.hover) === null || _b === void 0 ? void 0 : _b.position\n            : null;\n    });\n};\n/**\n *\n * @param nodeId id of a node\n * @returns an array of ids that are ancestors of the given node\n */\nexport var useNodeAncestorIds = function (nodeId) {\n    return useNodeAncestorProps(nodeId, function (ancestors) {\n        return ancestors.map(function (a) { return a.id; });\n    });\n};\n/**\n *\n * @param nodeId the id of a row or cell\n * @returns the nearest ancestor cell of the cell or row that has a plugin\n */\nexport var useParentCellId = function (nodeId) {\n    return useNodeProps(nodeId, function (node, ancestors) {\n        var _a;\n        return node && ancestors\n            ? (_a = ancestors.find(function (node) { return !isRow(node) && node.plugin; })) === null || _a === void 0 ? void 0 : _a.id\n            : null;\n    });\n};\n/**\n * returns a cell as a HoverTarget that is suiteable to be passed to the drop-logic\n *\n * @param nodeId a nodeId\n * @returns a HoverTarget\n */\nexport var useNodeAsHoverTarget = function (nodeId) {\n    return useNodeProps(nodeId, function (node, ancestors) {\n        var _a;\n        return node\n            ? {\n                id: node.id,\n                // the last element is the root element, we can't currenly use that as hover target\n                ancestorIds: ancestors.slice(0, -1).map(function (a) { return a.id; }),\n                hasInlineNeighbour: !isRow(node)\n                    ? node.hasInlineNeighbour\n                    : undefined,\n                inline: !isRow(node) ? node.inline : null,\n                levels: getDropLevels(node, ancestors),\n                pluginId: !isRow(node) ? (_a = node.plugin) === null || _a === void 0 ? void 0 : _a.id : undefined,\n            }\n            : null;\n    });\n};\n/**\n *\n * @deprecated currently unused\n */\nexport var useCellBounds = function (nodeId) {\n    return useNodeProps(nodeId, function (node, ancestors) {\n        var _a, _b, _c, _d, _e, _f, _g;\n        var parent = isRow(ancestors[0]) ? ancestors[0] : null;\n        if (!node) {\n            return null;\n        }\n        var myIndex = (_a = parent === null || parent === void 0 ? void 0 : parent.cells.findIndex(function (c) { return c.id === node.id; })) !== null && _a !== void 0 ? _a : -1;\n        var cell = !isRow(node) ? node : null;\n        if (!parent || !cell || myIndex < 0) {\n            return null;\n        }\n        if (cell.inline) {\n            return {\n                left: 0,\n                right: 0,\n            };\n        }\n        return {\n            left: myIndex > 0\n                ? ((_c = (_b = parent.cells[myIndex - 1]) === null || _b === void 0 ? void 0 : _b.size) !== null && _c !== void 0 ? _c : 0) + ((_d = cell.size) !== null && _d !== void 0 ? _d : 0) - 1\n                : 0,\n            right: myIndex === parent.cells.length - 1\n                ? 0\n                : ((_e = cell.size) !== null && _e !== void 0 ? _e : 0) - 1 + ((_g = (_f = parent.cells[myIndex + 1]) === null || _f === void 0 ? void 0 : _f.size) !== null && _g !== void 0 ? _g : 0),\n        };\n    });\n};\n/**\n *\n * @param nodeId a node id\n * @returns an array of nodeIds that are direct children of the given node\n */\nexport var useNodeChildrenIds = function (nodeId) {\n    return useNodeProps(nodeId, function (node) {\n        var _a, _b, _c, _d;\n        return isRow(node)\n            ? (_b = (_a = node === null || node === void 0 ? void 0 : node.cells) === null || _a === void 0 ? void 0 : _a.map(function (c) { return c.id; })) !== null && _b !== void 0 ? _b : []\n            : (_d = (_c = node === null || node === void 0 ? void 0 : node.rows) === null || _c === void 0 ? void 0 : _c.map(function (r) { return r.id; })) !== null && _d !== void 0 ? _d : [];\n    });\n};\n/**\n *\n * @param nodeId a node id\n * @returns true if node has children\n */\nexport var useNodeHasChildren = function (nodeId) {\n    return useNodeProps(nodeId, function (node) {\n        var _a, _b, _c, _d, _e;\n        return isRow(node)\n            ? (_b = ((_a = node.cells) === null || _a === void 0 ? void 0 : _a.length) > 0) !== null && _b !== void 0 ? _b : false\n            : (_e = ((_d = (_c = node === null || node === void 0 ? void 0 : node.rows) === null || _c === void 0 ? void 0 : _c.length) !== null && _d !== void 0 ? _d : 0) > 0) !== null && _e !== void 0 ? _e : false;\n    });\n};\n/**\n *\n * @param nodeId an id of a cell\n * @returns true if this cell has a configured plugin. It does not check if this plugin exists (in @see Options)\n */\nexport var useCellHasPlugin = function (nodeId) {\n    return useCellProps(nodeId, function (c) { return Boolean(c === null || c === void 0 ? void 0 : c.plugin); });\n};\n/**\n * @param parentNodeId the parent node id, or null if its the root\n * @returns all configured CellPlugin that are allowed in the given parentCellId\n */\nexport var useAllCellPluginsForNode = function (parentNodeId) {\n    if (parentNodeId === void 0) { parentNodeId = null; }\n    var currentLang = useLang();\n    var ancestors = useNodeProps(parentNodeId, function (node, ancestors) {\n        return __spreadArray([node], __read(ancestors), false).reverse().map(function (a) {\n            var _a;\n            return {\n                pluginId: !a || isRow(a) ? null : (_a = a.plugin) === null || _a === void 0 ? void 0 : _a.id,\n                data: !a || isRow(a) ? null : getCellData(a, currentLang),\n            };\n        });\n    });\n    // pluginIdsOfAncestors is an array of ids, the last one is the\n    var rootCellPlugins = useRenderOption('cellPlugins');\n    return useMemo(function () {\n        return getAvailablePlugins(rootCellPlugins, ancestors);\n    }, [rootCellPlugins, ancestors]);\n};\nexport var useCellIsAllowedHere = function (nodeId) {\n    var availablePlugins = useAllCellPluginsForNode(nodeId);\n    return useCallback(function (item) {\n        var _a, _b, _c, _d;\n        if (!(item === null || item === void 0 ? void 0 : item.cell)) {\n            return false;\n        }\n        var itemPluginId = typeof ((_a = item.cell) === null || _a === void 0 ? void 0 : _a.plugin) === 'string'\n            ? item.cell.plugin\n            : (_c = (_b = item.cell) === null || _b === void 0 ? void 0 : _b.plugin) === null || _c === void 0 ? void 0 : _c.id;\n        var allowed = !((_d = item.cell) === null || _d === void 0 ? void 0 : _d.plugin) ||\n            availablePlugins.some(function (p) { return p.id === itemPluginId; });\n        return allowed;\n    }, [availablePlugins]);\n};\n/**\n * Use this function to get the plugin of a cell.\n * @param nodeId an id of a cell\n * @returns the plugin of the given cell\n *\n */\nexport var usePluginOfCell = function (nodeId) {\n    var _a, _b;\n    var _c = (_a = useCellProps(nodeId, function (c, ancestors) {\n        var _a, _b;\n        return ({\n            pluginId: (_a = c === null || c === void 0 ? void 0 : c.plugin) === null || _a === void 0 ? void 0 : _a.id,\n            parentNodeId: (_b = ancestors === null || ancestors === void 0 ? void 0 : ancestors[0]) === null || _b === void 0 ? void 0 : _b.id,\n        });\n    })) !== null && _a !== void 0 ? _a : {}, pluginId = _c.pluginId, parentNodeId = _c.parentNodeId;\n    var plugins = useAllCellPluginsForNode(parentNodeId);\n    return (_b = plugins.find(function (p) { return p.id === pluginId; })) !== null && _b !== void 0 ? _b : null;\n};\n/**\n *\n * @param nodeId a cell id\n * @returns the raw localized data of the cell\n */\nexport var useCellDataI18nRaw = function (nodeId) {\n    return useCellProps(nodeId, function (c) { return c === null || c === void 0 ? void 0 : c.dataI18n; });\n};\n/**\n *\n * @param nodeId a cell id\n * @param lang a language key\n * @returns the data object in the given language of the given cell\n */\nexport var useCellData = function (nodeId, lang) {\n    var currentLang = useLang();\n    var theLang = lang !== null && lang !== void 0 ? lang : currentLang;\n    return useCellProps(nodeId, function (c) { var _a; return (_a = getCellData(c, theLang)) !== null && _a !== void 0 ? _a : {}; });\n};\n/**\n *returns style and classname of a cell's inner div\n * @param nodeId a cell id\n * @param lang a language key (optionally)\n * @returns the data object in the given language of the given cell\n */\nexport var useCellInnerDivStylingProps = function (nodeId, lang) {\n    var _a;\n    var plugin = usePluginOfCell(nodeId);\n    var currentLang = useLang();\n    var theLang = lang !== null && lang !== void 0 ? lang : currentLang;\n    return ((_a = useCellProps(nodeId, function (c) {\n        var data = getCellData(c, theLang);\n        return getCellInnerDivStylingProps(c, plugin, data);\n    })) !== null && _a !== void 0 ? _a : {});\n};\n/**\n *\n * @returns [data, onChangeData] pair, with setData debouncing the propagation\n * also data is always partially updated\n * @param nodeId the id of a cell\n */\nexport var useDebouncedCellData = function (nodeId) {\n    var cellData = useCellData(nodeId);\n    var _a = __read(useState(cellData), 2), setData = _a[1];\n    var dataRef = useRef(cellData);\n    var currentLang = useLang();\n    var cellDataRef = useRef(cellData);\n    var updateCellDataImmediate = useUpdateCellData(nodeId);\n    var updateCellDataDebounced = useCallback(debounce(function (options) {\n        cellDataRef.current = dataRef.current;\n        updateCellDataImmediate(dataRef.current, options);\n    }, 200), [updateCellDataImmediate]);\n    var changed = useMemo(function () { return !deepEquals(cellData, cellDataRef.current); }, [cellData]);\n    useEffect(function () {\n        // changed from \"outside\" overwrite whatever is pending\n        if (changed) {\n            cellDataRef.current = cellData;\n            dataRef.current = cellData;\n            setData(cellData);\n        }\n    }, [changed, cellData]);\n    var onChange = useCallback(function (partialData, options) {\n        // special handling if non default language is changed (special custom code)\n        if ((options === null || options === void 0 ? void 0 : options.lang) && options.lang !== currentLang) {\n            // this hook is a bit hacky, because we keep around state of changes and debounce changes\n            // its probably not the cleanest solution\n            // however this handling is problematic, if you change any other language.\n            // this is rarely used and only in custom code\n            // however, we don't need the debouncing if other languages are changed, because they are not visible anyway and do not feed back into this component\n            updateCellDataImmediate(partialData, options);\n        }\n        else {\n            dataRef.current = __assign(__assign({}, dataRef.current), partialData);\n            setData(dataRef.current);\n            updateCellDataDebounced(options);\n        }\n    }, [updateCellDataDebounced, updateCellDataImmediate, setData, currentLang]);\n    return [dataRef.current, onChange];\n};\n//# sourceMappingURL=node.js.map","var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nimport { useCallback } from 'react';\nimport { useDrop } from 'react-dnd';\nimport { getCommonAncestorTree } from '../../utils/ancestorTree';\nimport { blurAllCells } from '../../actions/cell';\nimport { blurCell, focusCell, removeCells, resizeCell, updateCellData, updateCellIsDraft, } from '../../actions/cell/core';\nimport { duplicateCell, duplicateNode, insertCellAtTheEnd, insertCellNewAsNewRow, } from '../../actions/cell/insert';\nimport { setDisplayReferenceNodeId } from '../../actions/display';\nimport { setLang } from '../../actions/setting';\nimport { useDispatch } from '../../reduxConnect';\nimport { isRow } from '../../types/node';\nimport { useAllCellPluginsForNode } from './node';\nimport { useEditorStore, useLang } from './options';\nimport { cloneWithNewIds } from '../../../core/utils/cloneWithNewIds';\nimport { useDisplayModeReferenceNodeId } from './displayMode';\n/**\n * @param id id of a node\n * @returns function, that sets a cell in draft mode (will be invisible in readonly / preview)\n */\nexport var useSetDraft = function (id) {\n    var dispatch = useDispatch();\n    return useCallback(function (isDraft, lang) {\n        return dispatch(updateCellIsDraft(id, isDraft, lang));\n    }, [dispatch, id]);\n};\n/**\n * @returns function to resize a cell\n */\nexport var useResizeCellById = function () {\n    var dispatch = useDispatch();\n    return useCallback(function (nodeId, size) { return dispatch(resizeCell(nodeId)(size)); }, [dispatch]);\n};\n/**\n *\n * @param id a cell id\n * @returns a function to resize the given cell\n */\nexport var useResizeCell = function (id) {\n    var resizeById = useResizeCellById();\n    return useCallback(function (size) { return resizeById(id, size); }, [resizeById, id]);\n};\n/**\n *\n * @returns a function to change the current language\n */\nexport var useSetLang = function () {\n    var dispatch = useDispatch();\n    return useCallback(function (lang) { return dispatch(setLang(lang)); }, [dispatch]);\n};\n/**\n *\n * @param id a cell id\n * @returns function to update the data of the given cell. Sets the data in the current language, unless options.lang is set\n */\nexport var useUpdateCellData = function (id) {\n    var dispatch = useDispatch();\n    var currentLang = useLang();\n    return useCallback(function (data, options) {\n        if (options === void 0) { options = {}; }\n        dispatch(updateCellData(id)(data, __assign({ notUndoable: false, lang: currentLang }, options)));\n    }, [dispatch, id, currentLang]);\n};\n/**\n * @returns a function to remove a cell by id\n */\nexport var useRemoveCellById = function () {\n    var dispatch = useDispatch();\n    return useCallback(function (id) { return dispatch(removeCells(id ? [id] : [])); }, [dispatch]);\n};\n/**\n * @param id a cell id\n * @returns a function to remove the given cell\n */\nexport var useRemoveCell = function (id) {\n    var removeById = useRemoveCellById();\n    return useCallback(function () { return removeById(id); }, [removeById, id]);\n};\n/**\n *\n * @returns a function to remove muliple nodeids\n */\nexport var useRemoveMultipleNodeIds = function () {\n    var dispatch = useDispatch();\n    return useCallback(function (nodeIds) {\n        dispatch(removeCells(nodeIds));\n    }, [dispatch]);\n};\n/**\n * @returns a function that duplicates a cell\n */\nexport var useDuplicateCellById = function () {\n    var dispatch = useDispatch();\n    var editor = useEditorStore();\n    return useCallback(function (id) {\n        var node = editor && editor.getNode(id);\n        if (node)\n            dispatch(duplicateCell(node));\n    }, [editor, dispatch]);\n};\nexport var useInsertAfter = function () {\n    var dispatch = useDispatch();\n    var insertNew = useInsertNew();\n    return useCallback(function (node, insertAfterNodeId) {\n        if (insertAfterNodeId) {\n            dispatch(duplicateNode(node, {\n                insertAfterNodeId: insertAfterNodeId,\n            }));\n        }\n        else {\n            // insert at the end\n            insertNew(cloneWithNewIds(node));\n        }\n    }, [dispatch, insertNew]);\n};\n/**\n * @returns a function that duplicates multiple cell\n */\nexport var useDuplicateMultipleCells = function () {\n    var editor = useEditorStore();\n    var insertAfter = useInsertAfter();\n    return useCallback(function (cellIds) {\n        var _a, _b, _c, _d;\n        var node = editor && getCommonAncestorTree(editor, cellIds);\n        if (!node) {\n            return;\n        }\n        var insertAfterNodeId = isRow(node)\n            ? node.id\n            : (_d = (_a = node === null || node === void 0 ? void 0 : node.rows) === null || _a === void 0 ? void 0 : _a[(_c = (_b = node === null || node === void 0 ? void 0 : node.rows) === null || _b === void 0 ? void 0 : _b.length) !== null && _c !== void 0 ? _c : 0 - 1]) === null || _d === void 0 ? void 0 : _d.id;\n        insertAfter(node, insertAfterNodeId);\n    }, [editor, insertAfter]);\n};\n/**\n * @param a cell id\n * @returns a function that duplicates the given cell\n */\nexport var useDuplicateCell = function (id) {\n    var duplicate = useDuplicateCellById();\n    return useCallback(function () { return duplicate(id); }, [duplicate, id]);\n};\n/**\n * experimental\n * @returns function to set the reference node id. used internally\n */\nexport var useSetDisplayReferenceNodeId = function () {\n    var dispatch = useDispatch();\n    var referenceId = useDisplayModeReferenceNodeId();\n    return useCallback(function (nodeId) {\n        if (nodeId !== referenceId)\n            dispatch(setDisplayReferenceNodeId(nodeId));\n    }, [dispatch, referenceId]);\n};\n/**\n * @returns a function to focus a cell by id\n */\nexport var useFocusCellById = function () {\n    var dispatch = useDispatch();\n    var editor = useEditorStore();\n    return useCallback(function (id, scrollToCell, mode) {\n        var _a, _b, _c;\n        if (!editor) {\n            return;\n        }\n        var parentCellId = (_c = (_b = (_a = editor\n            .getNodeWithAncestors(id)) === null || _a === void 0 ? void 0 : _a.ancestors) === null || _b === void 0 ? void 0 : _b.find(function (node) { return !isRow(node); })) === null || _c === void 0 ? void 0 : _c.id;\n        dispatch(setDisplayReferenceNodeId(parentCellId));\n        dispatch(focusCell(id, scrollToCell, mode));\n    }, [dispatch, editor]);\n};\n/**\n * @returns a function to focus a cell by id\n */\nexport var useFocusCell = function (id) {\n    var focusCellById = useFocusCellById();\n    return useCallback(function (scrollToCell, mode) {\n        if (id) {\n            focusCellById(id, scrollToCell, mode);\n        }\n    }, [focusCellById, id]);\n};\n/**\n * @returns function to blur a cell by id\n */\nexport var useBlurCell = function () {\n    var dispatch = useDispatch();\n    return useCallback(function (id) {\n        dispatch(blurCell(id));\n    }, [dispatch]);\n};\n/**\n * @returns function to blur all cells\n */\nexport var useBlurAllCells = function () {\n    var dispatch = useDispatch();\n    return useCallback(function () {\n        dispatch(blurAllCells());\n    }, [dispatch]);\n};\n/**\n * @returns function to insert a cell at the end of the document or the end of the parent cell\n *\n * if the id already exists, it will move that cell\n */\nexport var useInsertNew = function (parentCellId) {\n    var dispatch = useDispatch();\n    var cellPlugins = useAllCellPluginsForNode(parentCellId);\n    var editor = useEditorStore();\n    var lang = useLang();\n    return useCallback(function (partialCell) {\n        var action = parentCellId ? insertCellNewAsNewRow : insertCellAtTheEnd;\n        dispatch(action({\n            cellPlugins: cellPlugins,\n            lang: lang,\n        })(partialCell, { id: parentCellId }, { focusAfter: true }));\n    }, [dispatch, editor, cellPlugins, parentCellId]);\n};\n/**\n * used for the trash target\n */\nexport var useTrashDrop = function () {\n    var removeCell = useRemoveCellById();\n    return useDrop({\n        accept: 'cell',\n        collect: function (monitor) { return ({\n            isHovering: monitor.isOver({ shallow: true }),\n        }); },\n        drop: function (item, monitor) {\n            if (item.cell) {\n                removeCell(item.cell.id);\n            }\n        },\n    });\n};\n//# sourceMappingURL=nodeActions.js.map","var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __read = (this && this.__read) || function (o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    }\n    catch (error) { e = { error: error }; }\n    finally {\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        }\n        finally { if (e) throw e.error; }\n    }\n    return ar;\n};\nvar __spreadArray = (this && this.__spreadArray) || function (to, from, pack) {\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n        if (ar || !(i in from)) {\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n            ar[i] = from[i];\n        }\n    }\n    return to.concat(ar || Array.prototype.slice.call(from));\n};\nimport { mapNode } from './mapNode';\n/**\n * get a node with children that only contains certain cells\n * this is usefull to duplicate or clone multiple cells\n * @param editor: the editor store\n * @param cellIds\n */\nexport var getCommonAncestorTree = function (editor, cellIds) {\n    var nodesWithAncestors = cellIds.map(function (nodeId) {\n        var _a;\n        var _b = (_a = editor.getNodeWithAncestors(nodeId)) !== null && _a !== void 0 ? _a : {\n            ancestors: [],\n        }, node = _b.node, ancestors = _b.ancestors;\n        return { node: node, ancestors: __spreadArray([], __read(ancestors), false).reverse() };\n    });\n    // find common ancestors\n    var nearestCommonAncestor = null;\n    var depth = 0;\n    var search = true;\n    while (search) {\n        // check if every node has the same ancestor\n        if (nodesWithAncestors.every(function (n) {\n            var _a, _b;\n            return n.ancestors[depth] &&\n                ((_a = n.ancestors[depth]) === null || _a === void 0 ? void 0 : _a.id) === ((_b = nodesWithAncestors[0].ancestors[depth]) === null || _b === void 0 ? void 0 : _b.id);\n        })) {\n            nearestCommonAncestor = nodesWithAncestors[0].ancestors[depth];\n            depth++;\n        }\n        else {\n            search = false;\n        }\n    }\n    // remove nodes that we don't want to duplicate unless they have children\n    var cleaned = mapNode(nearestCommonAncestor, {\n        skipMapCell: function (c) {\n            return cellIds.includes(c.id);\n        },\n        // remove cells without rows\n        mapCell: function (c) {\n            var _a;\n            if ((_a = c.rows) === null || _a === void 0 ? void 0 : _a.length) {\n                return c;\n            }\n            else {\n                return null;\n            }\n        },\n        // remove empty cells from rows and remove row completly if its empty\n        mapRowDown: function (r) {\n            var _a;\n            if (!r)\n                return null;\n            var row = __assign(__assign({}, r), { cells: (_a = r.cells.filter(Boolean)) !== null && _a !== void 0 ? _a : [] });\n            if (row.cells.length === 0) {\n                return null;\n            }\n            return row;\n        },\n        // remove empty rows of cells\n        mapCellDown: function (c) {\n            var _a, _b, _c;\n            if (!c)\n                return null;\n            var cell = __assign(__assign({}, c), { rows: (_b = (_a = c === null || c === void 0 ? void 0 : c.rows) === null || _a === void 0 ? void 0 : _a.filter(Boolean)) !== null && _b !== void 0 ? _b : [] });\n            if (((_c = cell.rows) === null || _c === void 0 ? void 0 : _c.length) > 0 || cellIds.includes(cell.id)) {\n                return cell;\n            }\n            else {\n                return null;\n            }\n        },\n    });\n    return cleaned;\n};\n//# sourceMappingURL=ancestorTree.js.map"],"names":["isPreviewMode","_a","reactPage","display","mode","isLayoutMode","isEditMode","isInsertMode","isResizeMode","useIsEditMode","useIsInsertMode","useIsLayoutMode","useIsPreviewMode","useIsResizeMode","useDisplayMode","state","useDisplayModeReferenceNodeId","_b","referenceNodeId","useSetMode","dispatch","useCallback","useSetResizeMode","setMode","useSetEditMode","useSetLayoutMode","useSetInsertMode","useSetPreviewMode","__read","o","n","m","Symbol","iterator","r","e","i","call","ar","next","done","push","value","error","getMyPositionInParent","node","parent","siblings","cells","rows","findIndex","c","id","length","left","ancestors","greatParents","slice","right","above","below","getDropLevels","__assign","Object","assign","t","s","arguments","p","prototype","hasOwnProperty","apply","this","__spreadArray","to","from","pack","l","Array","concat","useNodeProps","nodeId","selector","result","deepEquals","useCellProps","useCell","useNodeHoverPosition","hover","position","useParentCellId","find","plugin","useNodeAsHoverTarget","ancestorIds","map","a","hasInlineNeighbour","undefined","inline","levels","pluginId","useNodeChildrenIds","_c","_d","useNodeHasChildren","_e","useCellHasPlugin","Boolean","useAllCellPluginsForNode","parentNodeId","currentLang","reverse","data","getCellData","rootCellPlugins","useMemo","getAvailablePlugins","useCellIsAllowedHere","availablePlugins","item","cell","itemPluginId","some","usePluginOfCell","useCellDataI18nRaw","dataI18n","useCellData","lang","theLang","useCellInnerDivStylingProps","useDebouncedCellData","cellData","setData","useState","dataRef","useRef","cellDataRef","updateCellDataImmediate","updateCellDataDebounced","options","current","changed","useEffect","onChange","partialData","useSetDraft","isDraft","useResizeCell","resizeById","size","useResizeCellById","useSetLang","useUpdateCellData","notUndoable","useRemoveCellById","useRemoveCell","removeById","useRemoveMultipleNodeIds","nodeIds","useInsertAfter","insertNew","useInsertNew","insertAfterNodeId","useDuplicateMultipleCells","editor","insertAfter","cellIds","useDuplicateCell","duplicate","getNode","useDuplicateCellById","useSetDisplayReferenceNodeId","referenceId","useFocusCellById","scrollToCell","parentCellId","getNodeWithAncestors","useFocusCell","focusCellById","useBlurAllCells","cellPlugins","partialCell","action","focusAfter","useTrashDrop","removeCell","accept","collect","monitor","isHovering","isOver","shallow","drop","getCommonAncestorTree","nodesWithAncestors","nearestCommonAncestor","depth","search","every","skipMapCell","includes","mapCell","mapRowDown","row","filter","mapCellDown"],"sourceRoot":""}